# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: nginx-hello
  name: nginx-hello-deployment
  namespace: demo
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-hello
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx-hello
    spec:
      containers:
      - image: qzschen/nginx-hello #qzschen/nginx-hello:v2
        imagePullPolicy: Always
        name: nginx-hello
        ports:
        - containerPort: 80
          name: 80http02
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 125m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30



# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl apply -f 4_1_deployment-advance-func.yaml
# deployment.apps/nginx-hello-deployment configured
# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo get po  -o wide
# NAME                                      READY   STATUS              RESTARTS   AGE   IP               NODE           NOMINATED NODE   READINESS GATES
# nginx-hello-deployment-6fbccdb6d4-dprcj   1/1     Running             0          76s   172.17.149.159   10.130.62.10   <none>           <none>
# nginx-hello-deployment-6fbccdb6d4-hnfpl   0/1     ContainerCreating   0          3s    <none>           10.130.62.11   <none>           <none>
# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo get po  -o wide
# NAME                                      READY   STATUS    RESTARTS   AGE   IP               NODE           NOMINATED NODE   READINESS GATES
# nginx-hello-deployment-6fbccdb6d4-dprcj   1/1     Running   0          85s   172.17.149.159   10.130.62.10   <none>           <none>
# nginx-hello-deployment-6fbccdb6d4-hnfpl   1/1     Running   0          12s   172.17.65.170    10.130.62.11   <none>           <none>
# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo get rs
# NAME                                DESIRED   CURRENT   READY   AGE
# nginx-hello-deployment-6fbccdb6d4   2         2         2       90s
# nginx-hello-deployment-dfffb8bc9    0         0         0       11m
# nginx-hello-rs                      0         0         0       16m
# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo describe deploy nginx-hello-deployment
# Name:                   nginx-hello-deployment
# Namespace:              demo
# CreationTimestamp:      Fri, 05 Jun 2020 15:29:04 +0800
# Labels:                 app=nginx-hello
# Annotations:            deployment.kubernetes.io/revision: 2
# Selector:               app=nginx-hello
# Replicas:               2 desired | 2 updated | 2 total | 2 available | 0 unavailable
# StrategyType:           RollingUpdate
# MinReadySeconds:        0
# RollingUpdateStrategy:  1 max unavailable, 1 max surge
# Pod Template:
#   Labels:  app=nginx-hello
#   Containers:
#    nginx-hello:
#     Image:      qzschen/nginx-hello
#     Port:       80/TCP
#     Host Port:  0/TCP
#     Limits:
#       cpu:     1
#       memory:  2Gi
#     Requests:
#       cpu:        125m
#       memory:     1Gi
#     Environment:  <none>
#     Mounts:       <none>
#   Volumes:        <none>
# Conditions:
#   Type           Status  Reason
#   ----           ------  ------
#   Available      True    MinimumReplicasAvailable
#   Progressing    True    NewReplicaSetAvailable
# OldReplicaSets:  <none>
# NewReplicaSet:   nginx-hello-deployment-6fbccdb6d4 (2/2 replicas created)
# Events:
#   Type    Reason             Age    From                   Message
#   ----    ------             ----   ----                   -------
#   Normal  ScalingReplicaSet  12m    deployment-controller  Scaled up replica set nginx-hello-deployment-dfffb8bc9 to 1
#   Normal  ScalingReplicaSet  12m    deployment-controller  Scaled down replica set nginx-hello-rs to 2
#   Normal  ScalingReplicaSet  12m    deployment-controller  Scaled up replica set nginx-hello-deployment-dfffb8bc9 to 2
#   Normal  ScalingReplicaSet  12m    deployment-controller  Scaled down replica set nginx-hello-rs to 1
#   Normal  ScalingReplicaSet  12m    deployment-controller  Scaled up replica set nginx-hello-deployment-dfffb8bc9 to 3
#   Normal  ScalingReplicaSet  11m    deployment-controller  Scaled down replica set nginx-hello-rs to 0
#   Normal  ScalingReplicaSet  2m10s  deployment-controller  Scaled down replica set nginx-hello-deployment-dfffb8bc9 to 1
#   Normal  ScalingReplicaSet  2m10s  deployment-controller  Scaled up replica set nginx-hello-deployment-6fbccdb6d4 to 1
#   Normal  ScalingReplicaSet  2m10s  deployment-controller  Scaled down replica set nginx-hello-deployment-dfffb8bc9 to 0
#   Normal  ScalingReplicaSet  57s    deployment-controller  (combined from similar events): Scaled up replica set nginx-hello-deployment-6fbccdb6d4 to 2

# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo get  deploy nginx-hello-deployment -o yaml
# apiVersion: extensions/v1beta1
# kind: Deployment
# metadata:
#   annotations:
#     deployment.kubernetes.io/revision: "2"
#     kubectl.kubernetes.io/last-applied-configuration: |
#       {"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nginx-hello"},"name":"nginx-hello-deployment","namespace":"demo"},"spec":{"progressDeadlineSeconds":600,"replicas":2,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"nginx-hello"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"nginx-hello"}},"spec":{"containers":[{"image":"qzschen/nginx-hello","imagePullPolicy":"Always","name":"nginx-hello","ports":[{"containerPort":80,"name":"80http02","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"2Gi"},"requests":{"cpu":"125m","memory":"1Gi"}},"securityContext":{"allowPrivilegeEscalation":false,"privileged":false,"readOnlyRootFilesystem":false,"runAsNonRoot":false},"stdin":true,"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","tty":true}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}}}
#   creationTimestamp: "2020-06-05T07:29:04Z"
#   generation: 3
#   labels:
#     app: nginx-hello
#   name: nginx-hello-deployment
#   namespace: demo
#   resourceVersion: "127925592"
#   selfLink: /apis/extensions/v1beta1/namespaces/demo/deployments/nginx-hello-deployment
#   uid: 3ba498e4-a6fe-11ea-bd56-9cdc716d5d28
# spec:
#   progressDeadlineSeconds: 600
#   replicas: 2
#   revisionHistoryLimit: 10
#   selector:
#     matchLabels:
#       app: nginx-hello
#   strategy:
#     rollingUpdate:
#       maxSurge: 1
#       maxUnavailable: 1
#     type: RollingUpdate
#   template:
#     metadata:
#       creationTimestamp: null
#       labels:
#         app: nginx-hello
#     spec:
#       containers:
#       - image: qzschen/nginx-hello
#         imagePullPolicy: Always
#         name: nginx-hello
#         ports:
#         - containerPort: 80
#           name: 80http02
#           protocol: TCP
#         resources:
#           limits:
#             cpu: "1"
#             memory: 2Gi
#           requests:
#             cpu: 125m
#             memory: 1Gi
#         securityContext:
#           allowPrivilegeEscalation: false
#           privileged: false
#           readOnlyRootFilesystem: false
#           runAsNonRoot: false
#         stdin: true
#         terminationMessagePath: /dev/termination-log
#         terminationMessagePolicy: File
#         tty: true
#       dnsPolicy: ClusterFirst
#       restartPolicy: Always
#       schedulerName: default-scheduler
#       securityContext: {}
#       terminationGracePeriodSeconds: 30
# status:
#   availableReplicas: 2
#   conditions:
#   - lastTransitionTime: "2020-06-05T07:29:04Z"
#     lastUpdateTime: "2020-06-05T07:29:04Z"
#     message: Deployment has minimum availability.
#     reason: MinimumReplicasAvailable
#     status: "True"
#     type: Available
#   - lastTransitionTime: "2020-06-05T07:29:04Z"
#     lastUpdateTime: "2020-06-05T07:39:36Z"
#     message: ReplicaSet "nginx-hello-deployment-6fbccdb6d4" has successfully progressed.
#     reason: NewReplicaSetAvailable
#     status: "True"
#     type: Progressing
#   observedGeneration: 3
#   readyReplicas: 2
#   replicas: 2
#   updatedReplicas: 2

# ----------------------------
# 1. 修改一下 replicas 为 1 再来看看

# 2. 修改镜像为另外一个版本 qzschen/nginx-hello:v2，然后修改一下 maxUnavailable 为 0 再来看看

# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl apply -f 4_1_deployment-advance-func.yaml
# deployment.apps/nginx-hello-deployment configured
# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo get po -o wide
# NAME                                      READY   STATUS              RESTARTS   AGE    IP               NODE           NOMINATED NODE   READINESS GATES
# nginx-hello-deployment-76db46db46-l6ns6   1/1     Running             0          4m6s   172.17.149.137   10.130.62.10   <none>           <none>
# nginx-hello-deployment-8464f9fdfb-pvw4k   0/1     ContainerCreating   0          2s     <none>           10.130.62.10   <none>

# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo get po -o wide
# NAME                                      READY   STATUS        RESTARTS   AGE     IP               NODE           NOMINATED NODE   READINESS GATES
# nginx-hello-deployment-76db46db46-l6ns6   1/1     Terminating   0          4m29s   172.17.149.137   10.130.62.10   <none>           <none>
# nginx-hello-deployment-8464f9fdfb-pvw4k   1/1     Running       0          25s     172.17.149.128   10.130.62.10   <none>           <none>
# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo get po -o wide
# NAME                                      READY   STATUS    RESTARTS   AGE   IP               NODE           NOMINATED NODE   READINESS GATES
# nginx-hello-deployment-8464f9fdfb-pvw4k   1/1     Running   0          29s   172.17.149.128   10.130.62.10   <none>           <none>
# chenqiang@Johnny kubernetes_resources_yaml_examples$ kubectl -n demo exec -it nginx-hello-deployment-8464f9fdfb-pvw4k -- curl localhost
# hello nginx v2
# chenqiang@Johnny kubernetes_resources_yaml_examples$